import{aC as n,h as p,P as m,J as l,e as i,y as e,aq as d,d as h}from"./index-3fca1522.js";import{v as u}from"./I3SMeshView3D-56e5b5b3.js";import{n as c}from"./LayerView3D-97ba5583.js";import{u as g}from"./LayerView-d64df35c.js";import"./I3SOverrides-8970e82c.js";import"./I3SNode-3c21486f.js";import"./I3SUtil-eb079328.js";import"./I3SBinaryReader-9bc79bf8.js";import"./RenderTexture-64129134.js";import"./FeatureLayerView3D-20cf7456.js";import"./FeatureLayerViewBase3D-368069d8.js";import"./FeatureLikeLayerView3D-330eaa34.js";import"./dehydratedFeatureComparison-a2ea08a8.js";import"./queryForSymbologySnapping-a2228428.js";import"./elevationInfoUtils-29abecab.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-2997a87b.js";import"./optimizedFeatureQueryEngineAdapter-b9325535.js";import"./centroid-57d0b643.js";import"./PooledRBush-59133963.js";import"./quickselect-56c5966e.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-784c28ef.js";import"./QueryEngineResult-caf504b9.js";import"./WhereClause-544968d0.js";import"./executionError-fb3f283a.js";import"./utils-4f7e58a0.js";import"./generateRendererUtils-f3aa3521.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./FeatureStore-751deec3.js";import"./BoundsStore-81e0bf78.js";import"./projectExtentUtils-3c4cd255.js";import"./EventedSet-a702b523.js";import"./popupUtils-03b6c0d5.js";import"./RefreshableLayerView-7e544a95.js";import"./SceneModification-61bc04d7.js";import"./persistable-8541a096.js";import"./resourceExtension-f0bedfb3.js";import"./SceneLayerWorker-3c694ac0.js";const y=.2;let r=class extends u(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),l(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(d)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([h("esri.views.3d.layers.SceneLayerView3D")],r);const et=r;export{et as default};
