import{cl as $,aK as C,dx as F,dy as q,a2 as R,J as I,iE as z,gr as E,iF as G,C as O,aZ as P}from"./index-4a6abd83.js";import{a as A}from"./elevationInfoUtils-27f59003.js";async function J(s,d,p,f,r){const{elevationProvider:h,renderCoordsHelper:c,spatialReference:b}=s,{elevationInfo:y}=d,m=F(y,!0),w=await q(m,b,r);R(r);const i=[],l=new Set,u=new Set;for(const{objectId:e,points:a}of f){const n=p(e);if(I(n)){for(const o of a)i.push(o[2]);l.add(e);continue}n.isDraped&&u.add(e);const t=n.graphic.geometry;S.setFromElevationInfo(A(t,y)),S.updateFeatureExpressionInfoContext(w,n.graphic,d),g.spatialReference=s.spatialReference;for(const{x:o,y:j,z:D}of a)g.x=o,g.y=j,g.z=D??0,z(g,h,S,c,v),i.push(v.z)}return{elevations:i,drapedObjectIds:u,failedObjectIds:l}}const S=new E,g=$(0,0,0,C.WGS84),v=new G;async function K(s,d,p){if(I(s)||d.candidates.length===0)return x;const f=s.graphics3DGraphicsByObjectID??s.graphics3DGraphics,r=[],h=[],{renderer:c}=s,b=O(c)&&"arcadeRequired"in c&&c.arcadeRequired?P():null,y=async(e,{graphic:a,graphics3DSymbol:n})=>{const t=await b,o=await s.getRenderingInfoAsync(a,c,t,{signal:p});return I(o)?[]:n.queryForSnapping(e,w,o,p)},{candidates:m,spatialReference:w}=d;for(let e=0;e<m.length;++e){const a=m[e],{objectId:n}=a,t=typeof n=="number"?f==null?void 0:f.get(n):void 0;if(I(t))continue;const{graphics3DSymbol:o}=t;o.symbologySnappingSupported&&(r.push(y(a,t)),h.push(e))}if(r.length===0)return x;const i=await Promise.all(r);R(p);const l=[],u=[];for(let e=0;e<i.length;++e){const a=i[e],n=h[e];for(const t of a)l.push(t),u.push(n)}return{candidates:l,sourceCandidateIndices:u}}const x={candidates:[],sourceCandidateIndices:[]};export{K as a,J as m};
