import{aC as n,h as p,P as m,J as l,e as i,y as e,aq as d,d as h}from"./index-4a6abd83.js";import{v as u}from"./I3SMeshView3D-2a9c5a0d.js";import{n as c}from"./LayerView3D-b7afca63.js";import{u as g}from"./LayerView-9055c868.js";import"./I3SOverrides-f3c3c1d0.js";import"./I3SNode-8e65b02d.js";import"./I3SUtil-18bb3ba2.js";import"./I3SBinaryReader-5712b75c.js";import"./RenderTexture-8d2e920b.js";import"./FeatureLayerView3D-7fec609b.js";import"./FeatureLayerViewBase3D-29585f18.js";import"./FeatureLikeLayerView3D-fa7806ba.js";import"./dehydratedFeatureComparison-0d2ee70e.js";import"./queryForSymbologySnapping-2ef55afd.js";import"./elevationInfoUtils-27f59003.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-508b84db.js";import"./optimizedFeatureQueryEngineAdapter-d2bebd47.js";import"./centroid-79cee7be.js";import"./PooledRBush-733b6af6.js";import"./quickselect-56c5966e.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-4df698d2.js";import"./QueryEngineResult-cd303468.js";import"./WhereClause-c3e2eea2.js";import"./executionError-fb3f283a.js";import"./utils-df416116.js";import"./generateRendererUtils-87edf88b.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./FeatureStore-e46ac89c.js";import"./BoundsStore-e849f6cf.js";import"./projectExtentUtils-06ee7bc6.js";import"./EventedSet-3599f10c.js";import"./popupUtils-bc502c54.js";import"./RefreshableLayerView-a57cd71c.js";import"./SceneModification-a72ba53f.js";import"./persistable-ee652dbd.js";import"./resourceExtension-9a0dfe2e.js";import"./SceneLayerWorker-5c8a0c48.js";const y=.2;let r=class extends u(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),l(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(d)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([h("esri.views.3d.layers.SceneLayerView3D")],r);const et=r;export{et as default};
