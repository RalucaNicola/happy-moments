import{aC as n,h as p,P as m,J as l,e as i,y as e,aq as d,d as h}from"./index-22b5b8b0.js";import{v as u}from"./I3SMeshView3D-e5e0150f.js";import{n as c}from"./LayerView3D-08826eae.js";import{u as g}from"./LayerView-d45ebc57.js";import"./I3SOverrides-812630f9.js";import"./I3SNode-27f792d4.js";import"./I3SUtil-d34d29bd.js";import"./I3SBinaryReader-b7e43de8.js";import"./RenderTexture-c8b3407e.js";import"./FeatureLayerView3D-c79f0395.js";import"./FeatureLayerViewBase3D-f6e71414.js";import"./FeatureLikeLayerView3D-c62d265e.js";import"./dehydratedFeatureComparison-00561298.js";import"./queryForSymbologySnapping-313469b0.js";import"./elevationInfoUtils-4b7016a2.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-b8eecbd6.js";import"./optimizedFeatureQueryEngineAdapter-40954e35.js";import"./centroid-b10d045b.js";import"./PooledRBush-da33488e.js";import"./quickselect-56c5966e.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-c6bd6f11.js";import"./QueryEngineResult-f7d668c1.js";import"./WhereClause-ef33f7d1.js";import"./executionError-fb3f283a.js";import"./utils-75d72f4d.js";import"./generateRendererUtils-61f7ab8f.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./FeatureStore-6241a6a3.js";import"./BoundsStore-acf4faa5.js";import"./projectExtentUtils-dd977381.js";import"./EventedSet-f8c474ce.js";import"./popupUtils-dacd0e4b.js";import"./RefreshableLayerView-e8547ee7.js";import"./SceneModification-03c12827.js";import"./persistable-1a078145.js";import"./resourceExtension-5afc4980.js";import"./SceneLayerWorker-d5faa4f0.js";const y=.2;let r=class extends u(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),l(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(d)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([h("esri.views.3d.layers.SceneLayerView3D")],r);const et=r;export{et as default};
