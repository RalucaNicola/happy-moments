import{pd as C,fE as M,Z as N,C as S,cM as w,cO as u,pe as d,pf as k,pg as v,ph as h,pi as U,pj as D,pk as j,pl as O,pm as F,pn as g,po as $,pp as L}from"./index-22b5b8b0.js";function Z(e,t,a,s){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?T(e,t,s):C(e,t,s).then(r=>R(M(r),e.name,t,a,s)):Promise.reject(new N("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function R(e,t,a,s,r){var f;const y=e.data,m=a&&S(a.portal)?a.portal:w.getDefault(),c={portal:m,url:u(e.baseUrl),origin:"portal-item"},o=y.items.find(n=>n.name===t);if(!o){const n=`The symbol name '${t}' could not be found`;return Promise.reject(new N("symbolstyleutils:symbol-name-not-found",n,{symbolName:t}))}let i=d(k(o,s),c),p=((f=o.thumbnail)==null?void 0:f.href)??null;const b=o.thumbnail&&o.thumbnail.imageData;v()&&(i=h(i)??"",p=h(p));const P={portal:m,url:u(U(i)),origin:"portal-item"};return D(i,r).then(n=>{const E=s==="cimRef"?j(n.data):n.data,l=O(E,P);if(l&&F(l)){if(p){const x=d(p,c);l.thumbnail=new g({url:x})}else b&&(l.thumbnail=new g({url:`data:image/png;base64,${b}`}));e.styleUrl?l.styleOrigin=new $({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(l.styleOrigin=new $({portal:a.portal,styleName:e.styleName,name:t}))}return l})}function T(e,t,a){const s=L.replace(/\{SymbolName\}/gi,e.name),r=S(t.portal)?t.portal:w.getDefault();return D(s,a).then(y=>{const m=j(y.data);return O(m,{portal:r,url:u(U(s)),origin:"portal-item"})})}export{R as fetchSymbolFromStyle,Z as resolveWebStyleSymbol};
